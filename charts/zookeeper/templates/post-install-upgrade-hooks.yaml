kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ template "zookeeper.fullname" . }}-post-install-upgrade
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-install, post-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": hook-succeeded, before-hook-creation, hook-failed
rules:
- apiGroups:
  - zookeeper.pravega.io
  resources:
  - "*"
  verbs:
  - get
---

kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ template "zookeeper.fullname" . }}-post-install-upgrade
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-install, post-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": hook-succeeded, before-hook-creation, hook-failed
subjects:
- kind: ServiceAccount
  name: {{ template "zookeeper.fullname" . }}-post-install-upgrade
  namespace: {{.Release.Namespace}}
roleRef:
  kind: Role
  name: {{ template "zookeeper.fullname" . }}-post-install-upgrade
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ template "zookeeper.fullname" . }}-post-install-upgrade
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-install, post-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": hook-succeeded, before-hook-creation, hook-failed

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "zookeeper.fullname" . }}-post-install-upgrade
  namespace: {{ .Release.Namespace }}
  annotations:
      "helm.sh/hook": post-install, post-upgrade
      "helm.sh/hook-weight": "1"
      "helm.sh/hook-delete-policy": hook-succeeded, before-hook-creation, hook-failed
data:
  validations.sh: |
    #!/bin/sh
    set +e
    sleep 30
    echo "Checking for ready ZK replicas"
    kubectl get ZookeeperCluster -n {{ .Release.Namespace }} {{ template "zookeeper.fullname" . }}  -o jsonpath='{.status.conditions[?(@.type=="PodsReady")].status}' | grep True
    if [ $? != 0 ]; then
        echo "ZK replicas not ready"
        exit 1
    fi
    set -e
    replicasZk=`kubectl get ZookeeperCluster -n {{ .Release.Namespace }} {{ template "zookeeper.fullname" . }} -o jsonpath='{.spec.replicas}'`
    readyReplicasZk=`kubectl get ZookeeperCluster -n {{ .Release.Namespace }} {{ template "zookeeper.fullname" . }} -o jsonpath='{.status.readyReplicas}'`
    currentVersionZk=`kubectl get ZookeeperCluster -n {{ .Release.Namespace }} {{ template "zookeeper.fullname" . }} -o jsonpath='{.status.currentVersion}'`
    targetVersionZk=`kubectl get ZookeeperCluster -n {{ .Release.Namespace }} {{ template "zookeeper.fullname" . }} -o jsonpath='{.spec.image.tag}'`

    echo
    echo "ZookeeperCluster replicas: $replicasZk"
    echo "ZookeeperCluster readyReplicas: $readyReplicasZk"
    echo "ZookeeperCluster currentVersion: $currentVersionZk"
    echo "ZookeeperCluster targetVersion: $targetVersionZk"
    echo
    if [[ -z $readyReplicasZk ]]; then
        echo "No ready ZK replicas"
        exit 2
    fi
    if [[ $replicasZk != $readyReplicasZk ]]; then
        echo "Wrong number of ZK replicas"
        exit 3
    fi
    if [[ -z $currentVersionZk ]]; then
        echo "Current ZK version not set"
        exit 4
    fi
    if [[ $currentVersionZk != $targetVersionZk ]]; then
        echo "Wrong current ZK version"
        exit 5
    fi

    echo "ZookeeperCluster is ready"
---

apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "zookeeper.fullname" . }}-post-install-upgrade
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-install, post-upgrade
    "helm.sh/hook-weight": "2"
    "helm.sh/hook-delete-policy": hook-succeeded, before-hook-creation, hook-failed
spec:
  backoffLimit: {{ .Values.hooks.backoffLimit }}
  template:
    metadata:
      name: {{ template "zookeeper.fullname" . }}-post-install-upgrade
      {{- if .Values.hooks.pod.annotations }}
      annotations:
{{ toYaml .Values.hooks.pod.annotations | indent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ template "zookeeper.fullname" . }}-post-install-upgrade
      restartPolicy: Never
      containers:
      - name: post-install-upgrade-job
        image: "{{ .Values.hooks.image.repository }}:{{ .Values.hooks.image.tag }}"
        command:
          - /scripts/validations.sh
        volumeMounts:
          - name: sh
            mountPath: /scripts
            readOnly: true
      volumes:
        - name: sh
          configMap:
            name: {{ template "zookeeper.fullname" . }}-post-install-upgrade
            defaultMode: 0555
